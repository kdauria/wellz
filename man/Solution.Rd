% Generated by roxygen2 (4.0.1): do not edit by hand
\name{Solution}
\alias{Solution}
\title{Construct a Solution object}
\usage{
Solution(volume = NA, compound.df = NULL, compound.names = NULL,
  concentrations = NULL, compound.types = NULL, solvent.df = NULL,
  solvent.names = NULL, solvent.percs = NULL)
}
\arguments{
\item{volume}{}

\item{compound.df}{}

\item{compound.names}{}

\item{concentrations}{}

\item{compound.types}{}

\item{solvent.df}{}

\item{solvent.names}{}

\item{solvent.percs}{}
}
\description{
Construct a \code{Solution} object from many possible inputs
}
\details{
A \code{Solution} object is a list with three elements:
the \code{volume}, a data frame in the \code{compounds}
slot, and a data frame in the \code{solvents} slot.
The compounds data frame has three columns: \code{name} (a string),
\code{conc} (a numeric), and \code{type} (a string either
\code{"type"}, \code{"start"}, or \code{"final"}). Each row
represents one compound in the solution. The solvents data
frame has two columns: \code{name} (a string) and \code{perc}
(a numeric between >0 and <=100 ).

The volume is set to \code{NA} unless it is specified.

If a compound data frame or solvent data frame is available, the quickest way
to make the solution is to give it as the \code{compound.df} or \code{solvent.df}
argument, respectively.

If a compound data frame isn't available, then one will be
constructed using the \code{compound.names}, \code{concentrations},
and \code{compound.types} arguments. If a solvent data frame isn't
available, one will be constructed with the \code{solvent.names} and
\code{solvent.percs} argument. All of the arguments used to construct
the data frames must be the same length or \code{NULL}. If they are \code{NULL},
then the corresponding column will be filled with \code{NA} values.
If no arguments are provided for a data frame, then a data frame
with the correct columns but zero rows will be returned.

If \code{compound.type=NA}, then it is by default set to \code{"start"}
}
\examples{
# empty Solution object
Solution()

# partially filled out Solution object
Solution( volume=100, compound.names=c("A"), concentrations=100)

# Error: two concentrations defined for one compound
Solution( volume=100, compound.names=c("A"), concentrations=c(10,100))

# A completely filled out solution object
Solution( volume=100, compound.names=c("A","B"), concentrations=c(10,100),
compound.types=c("start","total"), solvent.names="water",
solvent.percs=100)
}

