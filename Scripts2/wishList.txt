List of features that could be implemented later:

* Tags for custom grouping. For example, a column could be added
  for the metadata file. Tags could be comma separated and stored
  as a vector in each Well object. They could then be used to 
  group several wells with similar tags.

* Easier handling of wellOptions in plotting. For instance, I should
  be able to change the xvar to "time" from "sweep" in a plot
  e.g.,   p$wellOptions$xvar = "time"
  Not that "p" is a ggplot2 object (S3 object) with an additional 
  wellOptions element. The problem is that after changing a wellOption,
  the functioning of the ggplot object does not change; the x variable (xvar)
  is not changed to "time" when plotting p. One would have to run
  do.call( plot, c(wells,p$wellOptions) ) to remake the plot with the
  new well options. One option is to extend the ggplot class to a 
  ggplotWell class. Right now, the print.ggplot function shows the plot.
  It usese ggplot_build() to put together the plot's options before
  drawing the plot.  A custom print.ggplotWell function could pe used
  to check the wellOptions slot and update the data accordingly before
  then calling print.ggplot. It could check to see if the wellOptions
  list has changed at all, (which will be based on the factor columns)
  added to the data (  see melt.wellList.wgroups()  )

* Put dots or vertical lines on a plot denoting when an action occurs.

* Transformations:
  - combine two wells to be on the same time scales (by interpolating their times)
  - fit a smooth curve (e.g. spline) to the data for use with other transformations
  - integration (with smoothed curve, interpolated polynomials, numerically?)
  - y-translation
  - y-centering

* Custom analysis functions: 
  - Max rate between certain times
  - Time to 50% decrease in impedance
  - Area under the curve over a specified time
  - Doubling time over certain period of time

* Analyses of analyses:
  - Dose response

* Curve feature detection:
  - Detect sharp spikes in the data and recommend that an action be added
    to the well to annotate this

* GUI features
  - Easier input of metadata using a GUI with pictures of wells like in
    the actual RTCA software
  - Pairing of plot with a GUI to control features, select points, etc.
  - Visualize how parameters affect the results. For example, the
    degree of smoothing will affect the derivative of a curve. Can
    there be a slider that changes smoothing parameters and shows
    the changes to the curves or resulting analyses?
  - Such features are really difficult with R alone. Could use one of
    many packages such as rCharts, Shiny, googleVis, slidify, etc....


Things that will have to be done evetually (specifications, not wishes):

* Fix consistency of coding style. Use Google's R style recommendations with
  the exception that "=" is the preferred assignment operator. "<-","<<-", etc.
  are used when necessary.

* Make documentation. Save this for the end as there are still quite a few
  things that will change during the final clean up of the code.

* Make a manual with examples using knitr.

